name: dev

on:
  workflow_dispatch:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master, 'branch-*' ]
    paths-ignore:
      - "scripts/**"
      - "tools/**"
      - "jenkins/**"
      - "notes/**"

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: coursier/setup-action@v1.2.0
        with:
          jvm: temurin:1.21
          apps: sbt
      - uses: coursier/cache-action@v6

      - name: Configure ntp time
        run: |
          sudo apt-get install ntp -y
          sudo ntptime -T 37

      - name: Tests
        run: |
          sbt clean
          sbt -Dsbt.log.noformat=true -DenableFatalWarnings=false -Dpekko.actor.serialize-messages=on -DenableCoverage=true -DgenerateStoryReport=true csw-time/Test/test
          sbt -Dsbt.log.noformat=true -DenableFatalWarnings=false -Dpekko.actor.serialize-messages=on -DenableCoverage=true -DgenerateStoryReport=true -DdisableTimeTests Test/test


  multi-jvm-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: coursier/setup-action@v1.2.0
        with:
          jvm: temurin:1.21
          apps: sbt
      - uses: coursier/cache-action@v6

      - name: Docs Check
        run: |
          sbt clean
          sbt scalafmtCheck
          : # sbt scalastyle # Not scala 3 ready
          sbt makeSite

      - name: Multi-Jvm Tests
        run: sbt -Dsbt.log.noformat=true -DenableFatalWarnings=false -DgenerateStoryReport=true integration/MultiJvm/test

      - name: Generate RTM
        if: always()
        run: |
          cs launch --channel https://raw.githubusercontent.com/tmtsoftware/osw-apps/branch-6.0.x/apps.json rtm:0.4.3 -- target/RTM/testStoryMapping.txt tools/RTM/cswStoryToRequirementMap.csv target/RTM/testRequirementsMapping.txt

      - name: Upload RTM
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: RTM-multi-jvm
          path: target/RTM

  slack-success:
    needs: [ unit-tests, multi-jvm-tests ]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: kpritam/slack-job-status-action@v1
        with:
          job-status: Success
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-dev

  slack-failure:
    needs: [ unit-tests, multi-jvm-tests ]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - uses: kpritam/slack-job-status-action@v1
        with:
          job-status: Failure
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-dev

  slack-cancelled:
    needs: [ unit-tests, multi-jvm-tests ]
    if: cancelled()
    runs-on: ubuntu-latest
    steps:
      - uses: kpritam/slack-job-status-action@v1
        with:
          job-status: Cancelled
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-dev
